module config
{
import types.FilePath;
import types.S3Path;

struct DeployContextFile
{
    FilePath name;
    S3Path source;
};

/// Configuration file for the deployment tool
struct ToolConfig {
    FilePath releasesDir = "/opt/releases";
    FilePath contextCache = "/opt/etc/deployment";
    FilePath logFile = "/opt/var/log/hx-deploy-tool.log";
    S3Path releasesS3;
    Vector<DeployContextFile> deployContextFiles;
};

union Verbosity
{
  Void quiet;
  Void noisy;
};


/// Configuration specification for the letsencrypt related functions
struct LetsEncryptConfig
{
  /// The path to the install certbot executable
  String certbotPath;

  /// The ID of the AWS hosted zone containing the SSL DNS entries
  String awsHostedZoneId;

  /// The directory within which certbot will it's working files
  /// and live certificates
  String basedir;

  /// The email address that certbot will use for essential communications
  String email;

  /// The fully scoped DNS names required on the certificate
  Vector<String> domains;

  /// How much logging output to generate
  Verbosity verbosity = "quiet";
};

};
