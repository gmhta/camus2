# The camus2 configuration file
#
# The configuration can be supplied in yaml or json, and needs to
# adhere to a strict format. For more information, refer to 
# https://github.com/helix-collective/hx-deploy-tool/blob/master/adl/config.adl
# where the ADL spec is defined, or have a look at the documented examples
# https://helix-collective.github.io/hx-deploy-tool/
#
#
# The following is the configuration for the remote state deployment example:
#
# This location is where the release archives will be unpacked.
# It also serves as a working directory, and will house the nginx container,
# as well as state.json. Camus2 needs r/w/d rights.
releasesDir: /tmp/deploytest/releases
# The log file serves to store the camus2 logs only, the log management of the
# app you are deploying needs to be managed separately.
logFile: /tmp/deploytest/camus2.log
# The location where camus2 will look for your release archives
releases: 
  localdir: /tmp/tests
# This section specifies the details of the reverse proxy configuration. 
# If not specified, it defaults to 'noproxy'
deployMode:
  proxy: 
    endPoints:
# You can define as many enpoints as you like
# This is the short name of the endpoint for use with camus2
      main: 
        serverNames: 
# This is the actual endpoint nginx wil expose
        - main.localhost
        etype: httpOnly
      test: 
        serverNames: 
        - test.localhost
        etype: httpOnly
# Define a blob store for tracking remote stae
    remoteStateS3: 
      just: s3://{BLOB STORE FOR TRACKING APP STATE}
    slaveLabel:
# The slave label should be unique per server that will be run in slave mode.
# This label is used when logging to the remote state store
# If missing, this will default to the EC2 instance name
      label: myslave
# This is the port range that camus2 will assign to deployments.
# Make sure there is a sufficient range for the number of deployments and endpoints
# that you want to use. It is useful to have a 200 port buffer between this range
# and other reserved ports.
    dynamicPortRange: 
      v1: 8000
      v2: 8100
